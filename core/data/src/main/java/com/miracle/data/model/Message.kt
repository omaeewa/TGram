package com.miracle.data.model

import org.drinkless.tdlib.TdApi

data class Message(
    val id: Long = 0L,
    val senderId: TdApi.MessageSender = TdApi.MessageSenderUser(),
    val chatId: Long = 0L,
    val sendingState: TdApi.MessageSendingState? = null,
    val schedulingState: TdApi.MessageSchedulingState? = null,
    val isOutgoing: Boolean = false,
    val isPinned: Boolean = false,
    val isFromOffline: Boolean = false,
    val canBeEdited: Boolean = false,
    val canBeForwarded: Boolean = false,
    val canBeRepliedInAnotherChat: Boolean = false,
    val canBeSaved: Boolean = false,
    val canBeDeletedOnlyForSelf: Boolean = false,
    val canBeDeletedForAllUsers: Boolean = false,
    val canGetAddedReactions: Boolean = false,
    val canGetStatistics: Boolean = false,
    val canGetMessageThread: Boolean = false,
    val canGetReadDate: Boolean = false,
    val canGetViewers: Boolean = false,
    val canGetMediaTimestampLinks: Boolean = false,
    val canReportReactions: Boolean = false,
    val hasTimestampedMedia: Boolean = false,
    val isChannelPost: Boolean = false,
    val isTopicMessage: Boolean = false,
    val containsUnreadMention: Boolean = false,
    val date: Int = 0,
    val editDate: Int = 0,
    val forwardInfo: TdApi.MessageForwardInfo? = null,
    val importInfo: TdApi.MessageImportInfo? = null,
    val interactionInfo: TdApi.MessageInteractionInfo? = null,
    val unreadReactions: List<TdApi.UnreadReaction> = emptyList(),
    val factCheck: TdApi.FactCheck? = null,
    val replyTo: TdApi.MessageReplyTo? = null,
    val messageThreadId: Long = 0L,
    val savedMessagesTopicId: Long = 0L,
    val selfDestructType: TdApi.MessageSelfDestructType? = null,
    val selfDestructIn: Double = 0.0,
    val autoDeleteIn: Double = 0.0,
    val viaBotUserId: Long = 0L,
    val senderBusinessBotUserId: Long = 0L,
    val senderBoostCount: Int = 0,
    val authorSignature: String = "",
    val mediaAlbumId: Long = 0L,
    val effectId: Long = 0L,
    val restrictionReason: String = "",
    val content: MessageContent = MessageUnsupported,
    val replyMarkup: TdApi.ReplyMarkup? = null
)


fun TdApi.Message.toMessage() = Message(
    id = id,
    senderId = senderId,
    chatId = chatId,
    sendingState = sendingState,
    schedulingState = schedulingState,
    isOutgoing = isOutgoing,
    isPinned = isPinned,
    isFromOffline = isFromOffline,
    canBeEdited = canBeEdited,
    canBeForwarded = canBeForwarded,
    canBeRepliedInAnotherChat = canBeRepliedInAnotherChat,
    canBeSaved = canBeSaved,
    canBeDeletedOnlyForSelf = canBeDeletedOnlyForSelf,
    canBeDeletedForAllUsers = canBeDeletedForAllUsers,
    canGetAddedReactions = canGetAddedReactions,
    canGetStatistics = canGetStatistics,
    canGetMessageThread = canGetMessageThread,
    canGetReadDate = canGetReadDate,
    canGetViewers = canGetViewers,
    canGetMediaTimestampLinks = canGetMediaTimestampLinks,
    canReportReactions = canReportReactions,
    hasTimestampedMedia = hasTimestampedMedia,
    isChannelPost = isChannelPost,
    isTopicMessage = isTopicMessage,
    containsUnreadMention = containsUnreadMention,
    date = date,
    editDate = editDate,
    forwardInfo = forwardInfo,
    importInfo = importInfo,
    interactionInfo = interactionInfo,
    unreadReactions = unreadReactions.toList(),
    factCheck = factCheck,
    replyTo = replyTo,
    messageThreadId = messageThreadId,
    savedMessagesTopicId = savedMessagesTopicId,
    selfDestructType = selfDestructType,
    selfDestructIn = selfDestructIn,
    autoDeleteIn = autoDeleteIn,
    viaBotUserId = viaBotUserId,
    senderBusinessBotUserId = senderBusinessBotUserId,
    senderBoostCount = senderBoostCount,
    authorSignature = authorSignature,
    mediaAlbumId = mediaAlbumId,
    effectId = effectId,
    restrictionReason = restrictionReason,
    content = content.toMessageContent(),
    replyMarkup = replyMarkup
)
