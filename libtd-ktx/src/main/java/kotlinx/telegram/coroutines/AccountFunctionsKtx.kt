//
// NOTE: THIS FILE IS AUTO-GENERATED by the "TdApiKtxGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package kotlinx.telegram.coroutines

import kotlin.String
import kotlinx.telegram.core.TelegramFlow
import org.drinkless.tdlib.TdApi
import org.drinkless.tdlib.TdApi.AccountTtl

/**
 * Suspend function, which deletes the account of the current user, deleting all information
 * associated with the user from the server. The phone number of the account can be used to create a
 * new account. Can be called before authorization when the current authorization state is
 * authorizationStateWaitPassword.
 *
 * @param reason The reason why the account was deleted; optional.  
 * @param password The 2-step verification password of the current user. If the current user isn't
 * authorized, then an empty string can be passed and account deletion can be canceled within one week.
 */
suspend fun TelegramFlow.deleteAccount(reason: String?, password: String?) =
    this.sendFunctionLaunch(TdApi.DeleteAccount(reason, password))

/**
 * Suspend function, which returns the period of inactivity after which the account of the current
 * user will automatically be deleted.
 *
 * @return [AccountTtl] Contains information about the period of inactivity after which the current
 * user's account will automatically be deleted.
 */
suspend fun TelegramFlow.getAccountTtl(): AccountTtl = this.sendFunctionAsync(TdApi.GetAccountTtl())

/**
 * Suspend function, which changes the period of inactivity after which the account of the current
 * user will automatically be deleted.
 *
 * @param ttl New account TTL.
 */
suspend fun TelegramFlow.setAccountTtl(ttl: AccountTtl?) =
    this.sendFunctionLaunch(TdApi.SetAccountTtl(ttl))
