//
// NOTE: THIS FILE IS AUTO-GENERATED by the "TdApiKtxGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package kotlinx.telegram.coroutines

import kotlin.Int
import kotlin.Long
import kotlinx.telegram.core.TelegramFlow
import org.drinkless.tdlib.TdApi
import org.drinkless.tdlib.TdApi.Count
import org.drinkless.tdlib.TdApi.Countries
import org.drinkless.tdlib.TdApi.Text

/**
 * Suspend function, which returns information about existing countries. Can be called before
 * authorization.
 *
 * @return [Countries] Contains information about countries.
 */
suspend fun TelegramFlow.getCountries(): Countries = this.sendFunctionAsync(TdApi.GetCountries())

/**
 * Suspend function, which uses the current IP address to find the current country. Returns
 * two-letter ISO 3166-1 alpha-2 country code. Can be called before authorization.
 *
 * @return [Text] Contains some text.
 */
suspend fun TelegramFlow.getCountryCode(): Text = this.sendFunctionAsync(TdApi.GetCountryCode())

/**
 * Suspend function, which returns the total number of imported contacts.
 *
 * @return [Count] Contains a counter.
 */
suspend fun TelegramFlow.getImportedContactCount(): Count =
    this.sendFunctionAsync(TdApi.GetImportedContactCount())

/**
 * Suspend function, which changes the number of times the supergroup must be boosted by a user to
 * ignore slow mode and chat permission restrictions; requires canRestrictMembers administrator right.
 *
 * @param supergroupId Identifier of the supergroup.  
 * @param unrestrictBoostCount New value of the unrestrictBoostCount supergroup setting; 0-8. Use 0
 * to remove the setting.
 */
suspend fun TelegramFlow.setSupergroupUnrestrictBoostCount(supergroupId: Long,
    unrestrictBoostCount: Int) =
    this.sendFunctionLaunch(TdApi.SetSupergroupUnrestrictBoostCount(supergroupId,
    unrestrictBoostCount))
