//
// NOTE: THIS FILE IS AUTO-GENERATED by the "TdApiKtxGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package kotlinx.telegram.coroutines

import kotlin.String
import kotlinx.telegram.core.TelegramFlow
import org.drinkless.tdlib.TdApi
import org.drinkless.tdlib.TdApi.FormattedText
import org.drinkless.tdlib.TdApi.TextEntities
import org.drinkless.tdlib.TdApi.TextParseMode

/**
 * Suspend function, which returns all entities (mentions, hashtags, cashtags, bot commands, bank
 * card numbers, URLs, and email addresses) found in the text. Can be called synchronously.
 *
 * @param text The text in which to look for entities.
 *
 * @return [TextEntities] Contains a list of text entities.
 */
suspend fun TelegramFlow.getTextEntities(text: String?): TextEntities =
    this.sendFunctionAsync(TdApi.GetTextEntities(text))

/**
 * Suspend function, which parses Bold, Italic, Underline, Strikethrough, Spoiler, CustomEmoji,
 * BlockQuote, ExpandableBlockQuote, Code, Pre, PreCode, TextUrl and MentionName entities from a
 * marked-up text. Can be called synchronously.
 *
 * @param text The text to parse.  
 * @param parseMode Text parse mode.
 *
 * @return [FormattedText] A text with some entities.
 */
suspend fun TelegramFlow.parseTextEntities(text: String?, parseMode: TextParseMode?): FormattedText
    = this.sendFunctionAsync(TdApi.ParseTextEntities(text, parseMode))
